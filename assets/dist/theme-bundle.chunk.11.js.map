{"version":3,"sources":["webpack:///./assets/js/theme/category.js","webpack:///./assets/js/theme/common/utils/translations-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/common/utils/url-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Category","context","validationDictionary","createTranslationDictionary","setLiveRegionAttributes","$element","roleType","ariaLiveStatus","attr","role","makeShopByPriceFilterAccessible","$","length","hasClass","focus","on","onReady","this","productArray","loadProducts","arrangeFocusOnSortBy","checkCart","e","currentTarget","next","compareProducts","initFacetedSearch","onSortBySubmit","bind","hooks","setLiveRegionsAttributes","hoverCounter","self","hover","productId","find","data","productImageAltHandler","addToCart","deleteCart","ariaNotifyNoProducts","utils","api","cart","getCart","err","resp","id","css","form","FormData","append","itemAdd","window","location","href","cartId","fetch","origin","method","then","response","status","reload","console","log","each","i","currentElem","product","getById","productDOM","DOMParser","parseFromString","mainImageObject","getElementsByClassName","altImageObject","mainImg","altImg","element","setAttribute","$noProductsMessage","onMinPriceError","price_min_evaluation","onMaxPriceError","price_max_evaluation","minPriceNotEntered","price_min_not_entered","maxPriceNotEntered","price_max_not_entered","onInvalidPrice","price_invalid_value","$productListingContainer","$facetedSearchContainer","requestOptions","config","category","shop_by_price","products","limit","categoryProductsPerPage","template","productListing","sidebar","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","CatalogPage","isTranslationDictionaryNotEmpty","dictionary","Object","keys","activeDictionary","JSON","parse","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","split","pop","reduce","acc","updateCounterNav","counter","$link","urls","is","addClass","compare","join","removeClass","noCompareMessage","compareCounter","$compareLink","$checked","index","value","get","event","item","$clickedCompareLink","checked","push","indexOf","splice","decrementCounter","showAlertModal","urlUtils","getUrl","pathname","search","goToUrl","url","history","pushState","document","title","trigger","replaceParams","params","param","parsed","Url","hasOwnProperty","query","format","buildQueryString","queryData","out","Array","isArray","ndx","substring","parseQueryParams","temp","addEventListener","activeElement","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","page","preventDefault","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","collapsedFacets","collapsedFacetItems","collapsibleFactory","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","getPage","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","open","updateContent","$items","val","toLowerCase","text","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","validator","nod","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","assign","areAll","constants","VALID","decodeURI","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","replaceState"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import utils from '@bigcommerce/stencil-utils';\nimport { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport compareProducts from './global/compare-products';\nimport FacetedSearch from './common/faceted-search';\nimport { createTranslationDictionary } from '../theme/common/utils/translations-utils';\n\nexport default class Category extends CatalogPage {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n    }\n\n    setLiveRegionAttributes($element, roleType, ariaLiveStatus) {\n        $element.attr({\n            role: roleType,\n            'aria-live': ariaLiveStatus,\n        });\n    }\n\n    makeShopByPriceFilterAccessible() {\n        if (!$('[data-shop-by-price]').length) return;\n\n        if ($('.navList-action').hasClass('is-active')) {\n            $('a.navList-action.is-active').focus();\n        }\n\n        $('a.navList-action').on('click', () => this.setLiveRegionAttributes($('span.price-filter-message'), 'status', 'assertive'));\n    }\n\n    onReady() {\n        this.productArray = {};\n        this.loadProducts();\n        this.arrangeFocusOnSortBy();\n        this.checkCart();\n\n        $('[data-button-type=\"add-cart\"]').on('click', (e) => this.setLiveRegionAttributes($(e.currentTarget).next(), 'status', 'polite'));\n\n        this.makeShopByPriceFilterAccessible();\n\n        compareProducts(this.context);\n\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        $('a.reset-btn').on('click', () => this.setLiveRegionsAttributes($('span.reset-message'), 'status', 'polite'));\n\n        //HOVER START\n        this.hoverCounter = 1;\n        // because jquery uses \"this\", we need to redefine in order to call a class function within a jquery event\n        let self = this;\n        $('li.product').hover(function() {\n            let productId = $(this).find('button.quickview').data('productId');\n            self.productImageAltHandler(productId, $(this));\n        });\n\n        $('button.add-all-to-cart').on('click', () => {\n            const productId = $('button.quickview').data('productId');\n            this.addToCart(productId);\n        });\n\n        $('button.remove-all-from-cart').on('click', () => {\n            this.deleteCart();\n        });\n\n        this.ariaNotifyNoProducts();\n    }\n\n    checkCart() {\n        utils.api.cart.getCart({}, (err, resp) => {\n            if (resp.id) {\n                $('button.remove-all-from-cart').css('display', 'block');\n                $('button.remove-all-from-cart').attr('cart', resp.id);\n            }\n        });\n    }\n\n    addToCart(productId) {\n        let form = new FormData();\n        form.append('product_id', productId);\n        form.append('qty[]', 1);\n\n        utils.api.cart.itemAdd(form, (err, resp) => {\n            if (!err) {\n                window.location.href = '/cart.php'\n            }\n        });\n    }\n\n    deleteCart() {\n        let cartId = $('button.remove-all-from-cart').attr('cart');\n\n        fetch(`${window.location.origin}/api/storefront/carts/${cartId}`, {method: 'delete'})\n        .then((response) => {\n            if (response.status == 204) {\n                location.reload();\n            } else {\n                console.log('Failed to remove cart');\n            }\n        })\n    }\n\n    loadProducts() {\n        //for each product\n        $('li.product').each((i) => {\n            let currentElem = $('li.product')[i];\n            let productId = $(currentElem).find('button.quickview').data('productId');\n\n            utils.api.product.getById(productId, {}, (err, resp) => {\n                //assign product details (main/alt imgs) to the product array\n                const parser = new DOMParser();\n                const productDOM = parser.parseFromString(resp, 'text/html');\n                const mainImageObject = productDOM.getElementsByClassName('productView-thumbnail-link')[0];\n                const altImageObject = productDOM.getElementsByClassName('productView-thumbnail-link')[1];\n                this.productArray[productId] = {\n                    mainImg: mainImageObject.href,\n                    altImg: altImageObject.href\n                }\n            });\n        });\n    }\n\n    productImageAltHandler(productId, element) {\n        if (this.hoverCounter == 0) {\n            $(element).find('img.card-image')[0].setAttribute('srcset', `${this.productArray[productId].mainImg} 2560w`);\n            this.hoverCounter = 1;\n        } else {\n            $(element).find('img.card-image')[0].setAttribute('srcset', `${this.productArray[productId].altImg} 2560w`);\n            this.hoverCounter = 0;\n        }\n    }\n\n    ariaNotifyNoProducts() {\n        const $noProductsMessage = $('[data-no-products-notification]');\n        if ($noProductsMessage.length) {\n            $noProductsMessage.focus();\n        }\n    }\n\n    initFacetedSearch() {\n        const {\n            price_min_evaluation: onMinPriceError,\n            price_max_evaluation: onMaxPriceError,\n            price_min_not_entered: minPriceNotEntered,\n            price_max_not_entered: maxPriceNotEntered,\n            price_invalid_value: onInvalidPrice,\n        } = this.validationDictionary;\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const productsPerPage = this.context.categoryProductsPerPage;\n        const requestOptions = {\n            config: {\n                category: {\n                    shop_by_price: true,\n                    products: {\n                        limit: productsPerPage,\n                    },\n                },\n            },\n            template: {\n                productListing: 'category/product-listing',\n                sidebar: 'category/sidebar',\n            },\n            showMore: 'category/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n}\n","const TRANSLATIONS = 'translations';\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\n            return dictionary;\n        }\n    }\n};\n\n/**\n * defines Translation Dictionary to use\n * @param context provides access to 3 validation JSONs from en.json:\n * validation_messages, validation_fallback_messages and default_messages\n * @returns {Object}\n */\nexport const createTranslationDictionary = (context) => {\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\n\n    return translationKeys.reduce((acc, key, i) => {\n        acc[key] = localizations[i];\n        return acc;\n    }, {});\n};\n","import { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urls) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urls.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function ({ noCompareMessage, urls }) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\n        updateCounterNav(compareCounter, $compareLink, urls);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urls);\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal(noCompareMessage);\n            return false;\n        }\n    });\n}\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}